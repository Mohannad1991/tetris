package umkc.smt.tetris.plugin1.handlers;

import org.eclipse.core.commands.AbstractHandler;
import org.eclipse.core.commands.ExecutionEvent;
import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IConfigurationElement;
import org.eclipse.core.runtime.Platform;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.handlers.HandlerUtil;

import umkc.smt.tetris.plugin1.Tetris;

import org.eclipse.jface.dialogs.MessageDialog;

/**
 * Our sample handler extends AbstractHandler, an IHandler base class.
 * @see org.eclipse.core.commands.IHandler
 * @see org.eclipse.core.commands.AbstractHandler
 */
public class SampleHandler extends AbstractHandler {
	/**
	 * The constructor.
	 */
	public SampleHandler() {
	}

	/**
	 * the command has been executed, so extract extract the needed information
	 * from the application context.
	 */
	public Object execute(ExecutionEvent event) throws ExecutionException {		
		startGame();
		//umkc.smt.tetris.plugin2.Tetris tetris = new umkc.smt.tetris.plugin2.Tetris();
	//	tetris.startGame();
		return null;
	}

	//Copy and paste the following method
  private String startGame() {
		//String greetings = "";
		IConfigurationElement[] config = Platform.getExtensionRegistry()
				.getConfigurationElementsFor("umkc.smt.tetris.plugin1.ext_pnt");
		try {
			for (IConfigurationElement e : config) {
				System.out.println("Evaluating extension");
				final Object o = e.createExecutableExtension("Class");
				if (o instanceof Tetris) {
					((Tetris) o).startGame();
				}
			}
			return null;
		} catch (CoreException ex) {
			System.out.println(ex.getMessage());
			return null;
		}
  }
}
